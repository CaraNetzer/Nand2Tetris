class Line {

  field int x, y;
  field int length;
  field int direction; //1 = left, 2 = down, 3 = up, 4 = right


  /** Constructs a new Line object. */
  constructor Line new(int in_x, int in_y, int in_length) {
    let length = in_length;
    let x = in_x;
    let y = in_y;
    return this;
  }

  /** Draws the line. */
  method void draw(int direction) {
    //do Output.moveCursor(11,27);
    //do Output.printInt(x);
    //do Output.moveCursor(12,27);
    //do Output.printInt(y);

    do Screen.setColor(true);

    if ((direction = 1) & ((x - length) > 0)) {
      do Screen.drawLine(x, y, x - length, y);
      let x = x - length; }
    else {
      if ((direction = 2) & ((y + length) < 256)) {
        do Screen.drawLine(x, y, x, y + length);
        let y = y + length; }
      else {
        if ((direction = 3) & ((y - length) > 0)) {
          do Screen.drawLine(x, y, x, y - length);
          let y = y - length; }
        else {
          if ((direction = 4) & ((x + length) < 512)) {
            do Screen.drawLine(x, y, x + length, y);
            let x = x + length; }
        }
      }
    }

    return;
  }

  /** Sets the direction of a Line object */
  method void setDirection(int in_direction) {
    let direction = in_direction;

    //do Output.moveCursor(10,27);
	  //do Output.printInt(direction);

    return;
  }

  /** Returns the direction of the Line object it is called on */
  method char getDirection() {
    return direction;
  }

  method int getX() {
    return x;
  }
  method int getY() {
    return y;
  }
  method int getLength() {
    return length;
  }

  /** Deallocates the object's memory. */
  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }

}