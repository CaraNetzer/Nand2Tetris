function Enemy.new 0
push constant 10
call Memory.alloc 1
pop pointer 0
push constant 16
pop this 4
push argument 0
pop this 0
push argument 1
pop this 1
push constant 10
pop this 2
push constant 10
pop this 3
push constant 1
call Memory.alloc 1
pop this 6
push pointer 0
push this 6
push constant 5
call Enemy.modulus 2
call Enemy.setDirection 2
pop temp 0
push pointer 0
return
function Enemy.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Enemy.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call Enemy.draw 2
pop temp 0
push constant 0
return
function Enemy.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push argument 1
call Enemy.refreshFrame 2
pop temp 0
push constant 0
return
function Enemy.setDirection 0
push argument 0
pop pointer 0
push argument 1
pop this 5
push constant 0
return
function Enemy.getDirection 0
push argument 0
pop pointer 0
push this 5
return
function Enemy.move 0
push argument 0
pop pointer 0
push constant 0
pop this 8
push constant 32
push this 1
call Math.multiply 2
push this 0
push constant 16
call Math.divide 2
add
pop this 7
push pointer 0
push this 0
push this 1
call Enemy.checkIfOutOfBounds 3
pop this 8
push this 8
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 7
call Enemy.hide 2
pop temp 0
label IF_FALSE0
push this 5
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 2
sub
pop this 0
push this 1
push this 3
add
pop this 1
goto IF_END1
label IF_FALSE1
push this 5
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push this 2
add
pop this 0
push this 1
push this 3
add
pop this 1
goto IF_END2
label IF_FALSE2
push this 5
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push this 2
add
pop this 0
push this 1
push this 3
sub
pop this 1
goto IF_END3
label IF_FALSE3
push this 5
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push this 2
sub
pop this 0
push this 1
push this 3
sub
pop this 1
label IF_FALSE4
label IF_END3
label IF_END2
label IF_END1
push constant 2
push constant 8
call Output.moveCursor 2
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
push constant 3
push constant 8
call Output.moveCursor 2
pop temp 0
push this 1
call Output.printInt 1
pop temp 0
push pointer 0
push this 0
push this 1
call Enemy.checkIfOutOfBounds 3
pop this 8
push this 8
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 32
push this 1
call Math.multiply 2
push this 0
push constant 16
call Math.divide 2
add
pop this 7
push pointer 0
push this 7
call Enemy.show 2
pop temp 0
goto IF_END5
label IF_FALSE5
push constant 1
call Memory.alloc 1
pop this 6
push constant 1
push constant 8
call Output.moveCursor 2
pop temp 0
push this 6
push constant 9
call Enemy.modulus 2
call Output.printInt 1
pop temp 0
push this 5
push constant 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push pointer 0
push constant 3
call Enemy.setDirection 2
pop temp 0
goto IF_END6
label IF_FALSE6
push this 5
push constant 2
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
push constant 4
call Enemy.setDirection 2
pop temp 0
goto IF_END7
label IF_FALSE7
push this 5
push constant 3
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push constant 1
call Enemy.setDirection 2
pop temp 0
goto IF_END8
label IF_FALSE8
push this 5
push constant 4
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push pointer 0
push constant 2
call Enemy.setDirection 2
pop temp 0
label IF_FALSE9
label IF_END8
label IF_END7
label IF_END6
label IF_END5
push constant 0
return
function Enemy.checkIfOutOfBounds 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 0
push constant 4
pop this 5
label IF_FALSE0
push argument 1
push this 4
add
push constant 512
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 0
push constant 1
pop this 5
label IF_FALSE1
push argument 2
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 0
push constant 2
pop this 5
label IF_FALSE2
push argument 2
push this 4
add
push constant 256
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop local 0
push constant 3
pop this 5
label IF_FALSE3
push local 0
return
function Enemy.refreshFrame 0
push argument 0
pop pointer 0
push constant 16384
push argument 1
add
pop this 9
push this 9
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Enemy.draw 0
push argument 0
pop pointer 0
push constant 16384
push argument 1
add
pop this 9
push this 9
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 64
add
push constant 448
call Memory.poke 2
pop temp 0
push this 9
push constant 96
add
push constant 2032
call Memory.poke 2
pop temp 0
push this 9
push constant 128
add
push constant 4088
call Memory.poke 2
pop temp 0
push this 9
push constant 160
add
push constant 8060
call Memory.poke 2
pop temp 0
push this 9
push constant 192
add
push constant 7740
call Memory.poke 2
pop temp 0
push this 9
push constant 224
add
push constant 7196
call Memory.poke 2
pop temp 0
push this 9
push constant 256
add
push constant 7740
call Memory.poke 2
pop temp 0
push this 9
push constant 288
add
push constant 8060
call Memory.poke 2
pop temp 0
push this 9
push constant 320
add
push constant 4088
call Memory.poke 2
pop temp 0
push this 9
push constant 352
add
push constant 2032
call Memory.poke 2
pop temp 0
push this 9
push constant 384
add
push constant 448
call Memory.poke 2
pop temp 0
push this 9
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push this 9
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Enemy.modulus 0
push argument 0
push argument 1
push argument 0
push argument 1
call Math.divide 2
call Math.multiply 2
sub
return
