// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

//project 01 - CNETZER

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not16(in[0]=sel[2],
        in[1]=sel[2],
        in[2]=sel[2],
        in[3]=sel[2],
        in[4]=sel[2],
        in[5]=sel[2],
        in[6]=sel[2],
        in[7]=sel[2],
        in[8]=sel[2],
        in[9]=sel[2],
        in[10]=sel[2],
        in[11]=sel[2],
        in[12]=sel[2],
        in[13]=sel[2],
        in[14]=sel[2],
        in[15]=sel[2],
        out=notSel2);
    And16(
        a[0]=sel[2], b[0]=sel[2], 
        a[1]=sel[2], b[1]=sel[2], 
        a[2]=sel[2], b[2]=sel[2], 
        a[3]=sel[2], b[3]=sel[2], 
        a[4]=sel[2], b[4]=sel[2], 
        a[5]=sel[2], b[5]=sel[2], 
        a[6]=sel[2], b[6]=sel[2], 
        a[7]=sel[2], b[7]=sel[2], 
        a[8]=sel[2], b[8]=sel[2], 
        a[9]=sel[2], b[9]=sel[2], 
        a[10]=sel[2], b[10]=sel[2],  
        a[11]=sel[2], b[11]=sel[2],  
        a[12]=sel[2], b[12]=sel[2],  
        a[13]=sel[2], b[13]=sel[2],  
        a[14]=sel[2], b[14]=sel[2],  
        a[15]=sel[2], b[15]=sel[2],
        out=sel2);

    Mux4Way16(a=a[0..15], b=b[0..15], c=c[0..15], d=d[0..15], sel=sel[0..1], out=firstMux4Way16Out);
    Mux4Way16(a=e[0..15], b=f[0..15], c=g[0..15], d=h[0..15], sel=sel[0..1], out=secondMux4Way16Out);

    And16(a=firstMux4Way16Out, b=notSel2, out=aBCDOut);    
    And16(a=secondMux4Way16Out, b=sel2, out=eFGHOut);

    Or16(a=aBCDOut, b=eFGHOut, out=out);
}