// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

//CNetzer - project 03

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[12..14], a=regZero, b=regOne, c=regTwo, d=regThree, e=regFour, f=regFive, g=regSix, h=regSeven);

    RAM4K(address=address[0..11], in=in, load=regZero, out=outReg0);
    RAM4K(address=address[0..11], in=in, load=regOne, out=outReg1);
    RAM4K(address=address[0..11], in=in, load=regTwo, out=outReg2);
    RAM4K(address=address[0..11], in=in, load=regThree, out=outReg3);
    RAM4K(address=address[0..11], in=in, load=regFour, out=outReg4);
    RAM4K(address=address[0..11], in=in, load=regFive, out=outReg5);
    RAM4K(address=address[0..11], in=in, load=regSix, out=outReg6);
    RAM4K(address=address[0..11], in=in, load=regSeven, out=outReg7);

    Mux8Way16(a=outReg0, b=outReg1, c=outReg2, d=outReg3, e=outReg4, f=outReg5, g=outReg6, h=outReg7, sel=address[12..14], out=out);
}