// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

//CNetzer - project 03

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=regZero, b=regOne, c=regTwo, d=regThree, e=regFour, f=regFive, g=regSix, h=regSeven);

    RAM64(address=address[0..5], in=in, load=regZero, out=outReg0);
    RAM64(address=address[0..5], in=in, load=regOne, out=outReg1);
    RAM64(address=address[0..5], in=in, load=regTwo, out=outReg2);
    RAM64(address=address[0..5], in=in, load=regThree, out=outReg3);
    RAM64(address=address[0..5], in=in, load=regFour, out=outReg4);
    RAM64(address=address[0..5], in=in, load=regFive, out=outReg5);
    RAM64(address=address[0..5], in=in, load=regSix, out=outReg6);
    RAM64(address=address[0..5], in=in, load=regSeven, out=outReg7);

    Mux8Way16(a=outReg0, b=outReg1, c=outReg2, d=outReg3, e=outReg4, f=outReg5, g=outReg6, h=outReg7, sel=address[6..8], out=out);
}